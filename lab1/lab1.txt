Задание 1.
1. λxy.xz (замена: x = m, y=n) = λmn.mz -> (b)
2. λxy.xxy (замена x = a, y = b) = λa(λb).aab -> (c)
3. λxyz.zx (замена x = t, y = o, z = s) = λtos.st -> (b)

Задание 2.
Абстракция, в которой отсутствуют свободные переменные,
называется комбинатором

1. λx.xxx (x и в голове и в хвосте -> связанная переменная)
3. λxyz.xy(zx) (xyz и в голове и в хвосте)
4. λxyz.xy(zxy) (xyz и в голове и в хвосте)

Задание 3.
Бета-нормальная форма лямбда выражения – такой вид
выражения, при котором невозможно применить бета-редукцию
В ситуации, когда процесс бета-редукции имеет останов, говорят,
что он сходится к бета-нормальной форме
В противном случае говорят, что этот процесс расходится

1) λx.xxx 1
   111 -> Cходится
2) (λz.zz)(λy.yy)
   (λy.yy)(λy.yy) и тд -> расходится
3) (λx.xxx) z
	zzz -> сходится

Задание 4.
1) (λabc.cba) zz (λwv.w)
	(λbc.cbz) z (λwv.w)
	(λc.czz)(λwv.w)
	(λwv.w z) z
	λv.z z
	z
2) (λx.λy.xyy)(λa.a)b
	(λy.(λa.a)yy)b
	 λa.a bb
	 bb
3) (λy.y)(λx.xx)(λz.zq)
   (λx.xx)(λz.zq)
   (λz.zq)(λz.zq)
    λz.zq q
	qq
4) (λz.z)(λz.zz)(λz.zy)
	Замена
	(λz.z)(λz_.z_z_)(λz'.z'y)
	(λz_.z_z_)(λz'.z'y)
	(λz'.z'y)(λz'.z'y)
	 λz'.z'y y
	 yy
5)(λx.λy.xyy)(λy.y)y
   Замена
  (λx.λy.xyy)(λy_.y_)y'
   λy.(λy_.y_)yy y'
   (λy_.y_)y'y'
   y'y'
6)(λa.aa)(λb.ba)c
  Замена
  (λa.aa)(λb.ba_)c
  (λb.ba_)(λb.ba_)c
  λb.ba_ a_ c
  a_a_c
7.(λxyz.xz(yz))(λx.z)(λx.a)
  Замена
  (λxyz.xz(yz))(λx_.z_)(λx'.a)
  (λyz.(λx_.z_)z(yz))(λx'.a)
  λz.((λx_.z_)z(λx'.a z))
  λz.(z_ (λx'.a z))
  λz.z_a
  

  
   
   